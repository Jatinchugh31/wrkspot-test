plugins {
    id 'java'
    id 'io.quarkus'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")

    //  Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    //  Utility
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    //  Web / REST
    implementation 'io.quarkus:quarkus-rest'
    implementation 'io.quarkus:quarkus-rest-jackson'
    implementation 'io.quarkus:quarkus-smallrye-openapi'

    //  Hibernate / JPA / Validation
    implementation 'io.quarkus:quarkus-hibernate-orm'
    implementation 'io.quarkus:quarkus-hibernate-orm-panache'
    implementation 'io.quarkus:quarkus-hibernate-validator'
    implementation 'io.quarkus:quarkus-flyway'

    //  Kafka / Messaging
    implementation 'io.quarkus:quarkus-messaging-kafka'

    //  Configuration & DI
    implementation 'io.quarkus:quarkus-config-yaml'
    implementation 'io.quarkus:quarkus-arc'

    //  MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    //  WireMock for mocking HTTP
    implementation 'io.quarkiverse.wiremock:quarkus-wiremock:1.5.0'

    //  JDBC Driver
    implementation 'io.quarkus:quarkus-jdbc-postgresql'

    //  Test dependencies
    testImplementation 'io.quarkus:quarkus-test-common'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'com.h2database:h2:2.3.232'
    testImplementation 'io.quarkiverse.mockk:quarkus-junit5-mockk:3.0.0'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'io.smallrye.reactive:smallrye-reactive-messaging-in-memory:4.27.0'
}

group = 'com.wrkspot'
version = '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
